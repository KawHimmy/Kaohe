工作原理
工作区-->add暂存到（暂存区）-->commit提交到（版本库）

git init  \\生成git 子目录，产生一个仓库
git status \\常看当前目录下所有文件的状态
git add. \\将该目录下所有文件提交到暂存区
git add 文件名\\将该目录下指定的文件提交到暂存区
git commit -m V1.0\\将暂存区的文件提交到版本库
git log\\ 查看我们提交时间


git 回滚（文件要先上传到版本区，才可以查找）
git reset --hard 对应版本的哈希值//跳转到指定的版本
git reflog // 查看版本跳转记录


注意 在主的文件下创建分支，系统会默认给出第一条分支master 此分支应先提交到版本库 
再创建其他分支，仍提交到版本库。创建完所有分支后，在运用checkout 实现跳转
git branch // 查看有哪些分支
git branch 分支名 // 创建分支
git checkout 分支名// 实现分支跳转

合并（1 合并文件前，文件不能被修改而不记录，先用status 检查文件是否被修改过/  
2 合并后 生成新的文件，具有两个不同版本的内容//3 合并后，合并为第一条分支
4被合并的分支仍然存在）
git merge 分支名// 合并分支/（该语句指 该分支被合并到当前选中的分支中）
git restore 文件名 // 撤销对文件的修改

git remote add origin 远程仓库网址// 把远程仓库的网址保存到电脑上( origin 是网址的变量名，对不同的网址，进行变量名的修改
git push  -u origin 分支名  // 推送本地代码到远程仓库

git clone 项目网址// 下载项目




github 个人访问令牌 9月10日 起30天  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